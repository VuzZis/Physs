# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Create Physs build

permissions:
  pull-requests: write
  issues: write
  repository-projects: write

on:
  push:
    branches:
      - "**"

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    - name: Change wrapper permissions
      run: chmod +x ./gradlew

    - name: Update bundles
      if: ${{ github.repository == 'VuzZis/Physs' }}
      run: |
        ./gradlew updateResources

        if [ -n "$(git status --porcelain  -- src/main/resources/)" ]; then
          git config --global user.email "actions@github.com"
          git config --global user.name "Github Actions"
          git add src/main/resources/*
          git commit -m "Automatic resources update"
          git push
        fi
    - name: Build
      run: ./gradlew build
    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: Physs Core
        path: ./build/libs/*.jar
